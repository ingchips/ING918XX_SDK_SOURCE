{
 "bundle_meta": {
  "rom": {
   "size": 143916,
   "base": 16384
  },
  "ram": {
   "size": 30996,
   "base": 536870912
  },
  "app": {
   "base": 163840
  },
  "api": [
   "att_server_init","att_server_register_packet_handler","att_server_can_send_packet_now","att_server_request_can_send_now_event","att_server_deferred_read_response","att_server_notify","att_server_indicate","att_server_get_mtu","att_emit_general_event","att_set_db","att_set_read_callback","att_set_write_callback","att_dispatch_register_client","att_dispatch_register_server","att_dispatch_client_can_send_now","att_dispatch_server_can_send_now","att_dispatch_client_request_can_send_now_event","att_dispatch_server_request_can_send_now_event","gatt_client_discover_primary_services","gatt_client_discover_primary_services_by_uuid16","gatt_client_discover_primary_services_by_uuid128","gatt_client_find_included_services_for_service","gatt_client_discover_characteristics_for_service","gatt_client_discover_characteristics_for_handle_range_by_uuid16","gatt_client_discover_characteristics_for_handle_range_by_uuid128","gatt_client_discover_characteristic_descriptors","gatt_client_read_value_of_characteristic_using_value_handle","gatt_client_read_value_of_characteristics_by_uuid16","gatt_client_read_value_of_characteristics_by_uuid128","gatt_client_read_long_value_of_characteristic_using_value_handle","gatt_client_read_long_value_of_characteristic_using_value_handle_with_offset","gatt_client_read_multiple_characteristic_values","gatt_client_write_value_of_characteristic_without_response","gatt_client_signed_write_without_response","gatt_client_write_value_of_characteristic","gatt_client_write_long_value_of_characteristic","gatt_client_write_long_value_of_characteristic_with_offset","gatt_client_reliable_write_long_value_of_characteristic","gatt_client_read_characteristic_descriptor_using_descriptor_handle","gatt_client_read_long_characteristic_descriptor_using_descriptor_handle","gatt_client_read_long_characteristic_descriptor_using_descriptor_handle_with_offset","gatt_client_write_characteristic_descriptor_using_descriptor_handle","gatt_client_write_long_characteristic_descriptor_using_descriptor_handle","gatt_client_write_long_characteristic_descriptor_using_descriptor_handle_with_offset","gatt_client_write_client_characteristic_configuration","gatt_client_prepare_write","gatt_client_execute_write","gatt_client_cancel_write","gatt_client_get_mtu","gatt_client_is_ready","gatt_client_listen_for_characteristic_value_updates","gatt_client_register_handler","gap_set_random_device_address","gap_disconnect","gap_disconnect_all","gap_add_whitelist","gap_remove_whitelist","gap_clear_white_lists","gap_read_rssi","gap_read_remote_used_features","gap_read_remote_info","gap_le_read_channel_map","gap_read_phy","gap_set_def_phy","gap_set_phy","gap_set_adv_set_random_addr","gap_set_ext_scan_para","gap_set_ext_scan_response_data","gap_set_ext_scan_enable","gap_set_ext_adv_enable","gap_set_ext_adv_para","gap_set_ext_adv_data","gap_set_periodic_adv_data","gap_set_periodic_adv_enable","gap_set_periodic_adv_para","gap_clr_adv_set","gap_rmv_adv_set","gap_periodic_adv_create_sync","gap_periodic_adv_create_sync_cancel","gap_periodic_adv_term_sync","gap_add_dev_to_periodic_list","gap_rmv_dev_from_periodic_list","gap_clr_periodic_adv_list","gap_read_periodic_adv_list_size","gap_ext_create_connection","gap_create_connection_cancel","gap_set_data_length","gap_set_connectionless_cte_tx_param","gap_set_connectionless_cte_tx_enable","gap_set_connectionless_iq_sampling_enable","gap_set_connection_cte_rx_param","gap_set_connection_cte_tx_param","gap_set_connection_cte_request_enable","gap_set_connection_cte_response_enable","gap_read_antenna_info","gap_set_periodic_adv_rx_enable","gap_periodic_adv_sync_transfer","gap_periodic_adv_set_info_transfer","gap_periodic_adv_sync_transfer_param","gap_default_periodic_adv_sync_transfer_param","gap_set_host_channel_classification","gap_update_connection_parameters","gap_get_connection_parameter_range","gap_set_connection_parameter_range","gap_aes_encrypt","gap_rx_test_v2","gap_rx_test_v3","gap_tx_test_v2","gap_tx_test_v4","gap_test_end","gap_vendor_tx_continuous_wave","gap_start_ccm","hci_add_event_handler","hci_register_acl_packet_handler","hci_power_control","platform_trace_raw","platform_set_evt_callback","platform_set_irq_callback","platform_get_version","platform_raise_assertion","platform_get_heap_status","platform_install_isr_stack","platform_reset","platform_switch_app","platform_write_persistent_reg","platform_read_persistent_reg","platform_shutdown","platform_config","platform_read_info","platform_calibrate_32k","platform_32k_rc_tune","platform_32k_rc_auto_tune","platform_hrng","platform_rand","platform_get_us_time","platform_printf","sysSetPublicDeviceAddr","platform_set_rf_clk_source","platform_set_rf_init_data","platform_set_rf_power_mapping","platform_patch_rf_init_data","platform_get_task_handle","platform_set_timer","big_endian_read_16","big_endian_read_32","big_endian_store_16","big_endian_store_32","reverse_bytes","reverse_24","reverse_48","reverse_56","reverse_64","reverse_128","reverse_bd_addr","char_for_nibble","nibble_for_char","bd_addr_cmp","bd_addr_copy","printf_hexdump","uuid128_to_str","bd_addr_to_str","sscanf_bd_addr","uuid_add_bluetooth_prefix","uuid_has_bluetooth_prefix","btstack_config","btstack_push_user_msg","l2cap_register_fixed_channel","l2cap_can_send_fixed_channel_packet_now","l2cap_request_can_send_fix_channel_now_event","l2cap_send_connectionless","l2cap_send_connectionless3","l2cap_le_send_flow_control_credit","l2cap_send_echo_request","l2cap_init","l2cap_register_packet_handler","l2cap_max_mtu","l2cap_max_le_mtu","l2cap_create_channel","l2cap_disconnect","l2cap_get_remote_mtu_for_local_cid","l2cap_send","l2cap_register_service","l2cap_unregister_service","l2cap_can_send_packet_now","l2cap_request_can_send_now_event","l2cap_request_connection_parameter_update","sm_config","sm_add_event_handler","sm_private_random_address_generation_set_mode","sm_private_random_address_generation_get_mode","sm_private_random_address_generation_set_update_period","sm_private_random_address_generation_get","sm_register_oob_data_callback","sm_set_accepted_stk_generation_methods","sm_set_encryption_key_size_range","sm_set_authentication_requirements","sm_address_resolution_lookup","sm_config_conn","sm_bonding_decline","sm_just_works_confirm","sm_passkey_input","sm_send_security_request","sm_encryption_key_size","sm_authenticated","sm_authorization_state","sm_request_pairing","sm_authorization_decline","sm_authorization_grant","sm_le_device_key","le_device_db_add","le_device_db_find","le_device_db_from_key","le_device_db_iter_init","le_device_db_iter_cur","le_device_db_iter_next","le_device_db_iter_cur_key","le_device_db_remove_key","kv_init","kv_remove_all","kv_remove","kv_put","kv_get","kv_value_modified","kv_commit","kv_visit","btstack_memory_pool_create","btstack_memory_pool_get","btstack_memory_pool_free","ll_set_adv_coded_scheme","ll_set_initiating_coded_scheme","ll_hint_on_ce_len","ll_set_conn_tx_power","ll_set_conn_coded_scheme","ll_set_conn_latency","ll_set_def_antenna","ll_legacy_adv_set_interval","ll_attach_cte_to_adv_set","ll_scanner_enable_iq_sampling","ll_raw_packet_free","ll_raw_packet_alloc","ll_raw_packet_set_param","ll_raw_packet_set_bare_mode","ll_raw_packet_set_bare_data","ll_raw_packet_set_tx_data","ll_raw_packet_send","ll_raw_packet_get_rx_data","ll_raw_packet_get_bare_rx_data","ll_raw_packet_recv","ll_raw_packet_set_tx_cte","ll_raw_packet_set_fake_cte_info","ll_raw_packet_set_rx_cte","ll_raw_packet_get_iq_samples","ll_ackable_packet_alloc","ll_ackable_packet_set_tx_data","ll_ackable_packet_get_status","ll_ackable_packet_run","ll_malloc","ll_free","ll_set_max_conn_number","ll_scan_set_fixed_channel","ll_set_adv_access_address","ll_set_conn_interval_unit","ll_query_timing_info","xQueueGenericSend","xQueuePeek","xQueuePeekFromISR","xQueueReceive","uxQueueMessagesWaiting","uxQueueSpacesAvailable","vQueueDelete","xQueueGenericSendFromISR","xQueueGiveFromISR","xQueueReceiveFromISR","xQueueIsQueueEmptyFromISR","xQueueIsQueueFullFromISR","uxQueueMessagesWaitingFromISR","xQueueCreateMutex","xQueueCreateMutexStatic","xQueueCreateCountingSemaphore","xQueueCreateCountingSemaphoreStatic","xQueueSemaphoreTake","xQueueTakeMutexRecursive","xQueueGiveMutexRecursive","xQueueGenericCreate","xQueueGenericCreateStatic","xQueueCreateSet","xQueueAddToSet","xQueueRemoveFromSet","xQueueSelectFromSet","xQueueSelectFromSetFromISR","vQueueWaitForMessageRestricted","xQueueGenericReset","xTaskCreate","xTaskCreateStatic","vTaskDelay","uxTaskPriorityGet","uxTaskPriorityGetFromISR","vTaskPrioritySet","vTaskSuspend","vTaskResume","xTaskResumeFromISR","vTaskStartScheduler","vTaskSuspendAll","xTaskResumeAll","xTaskGetTickCount","xTaskGetTickCountFromISR","uxTaskGetStackHighWaterMark","xTaskIncrementTick","vTaskPlaceOnEventList","vTaskPlaceOnEventListRestricted","xTaskRemoveFromEventList","vTaskSwitchContext","xTaskGetCurrentTaskHandle","xTaskCheckForTimeOut","vTaskMissedYield","xTaskGetSchedulerState","xTaskPriorityInherit","xTaskPriorityDisinherit","vTaskPriorityDisinheritAfterTimeout","vTaskStepTick","eTaskConfirmSleepModeStatus","pvTaskIncrementMutexHeldCount","vTaskInternalSetTimeOutState","xTimerCreate","xTimerCreateStatic","pvTimerGetTimerID","xTimerGetTimerDaemonTaskHandle","xTimerGetExpiryTime","xTimerCreateTimerTask","xTimerGenericCommand","pxPortInitialiseStack","pvPortMalloc","vPortFree","xPortStartScheduler","vPortEndScheduler","vPortEnterCritical","vPortExitCritical","vPortSuppressTicksAndSleep","vPortValidateInterruptPriority","vListInitialise","vListInitialiseItem","vListInsert","vListInsertEnd","uxListRemove"],
  "version": [
   1,7,28]
 },
 "tc_dir": "C:\\Keil_v5\\UV4",
 "ide_ver": "5",
 "ide_exe": "C:\\Keil_v5\\UV4\\UV4.exe",
 "ota": false,
 "ide": "keil",
 "git": false,
 "scan_data": "0\r\n",
 "log_uart1": false,
 "enable_hci_log": false,
 "ota_ver_minor": "0",
 "ota_ver_major": "0",
 "template": "C:\\projects\\ingWizard\\templates\\extension\\peripheral",
 "series": "ING9188xx",
 "proj_name": "peripheral_led",
 "sdk_release_path": "..\/..",
 "legacy_adv": true,
 "adv_data": "\/\/ 0x01 - \ufffd\ufffdFlags\ufffd\ufffd\r\n2, 0x01,\r\n0x06, \r\n\r\n\/\/ 0x07 - \ufffd\ufffdComplete List of 128-bit Service Class UUIDs\ufffd\ufffd\r\n17, 0x07,\r\n0xFD, 0x84, 0x9B, 0xC4, 0x1D, 0x8A, 0x84, 0xA0, \r\n0x93, 0x47, 0x04, 0xE0, 0x26, 0xA5, 0x33, 0x6A, \r\n\r\n\/\/ 0x09 - \ufffd\ufffdComplete Local Name\ufffd\ufffd\r\n8, 0x09,\r\n0x49, 0x4E, 0x47, 0x20, 0x4C, 0x45, 0x44, \r\n\r\n\/\/ Total size = 30 bytes\r\n",
 "wizard_dir": "C:\/projects\/ingWizard",
 "pb_adv": true,
 "pb_gatt": true,
 "deep_sleep": true,
 "proj_dir": "C:\/projects\/ingchips\/SDK_Release\/examples\\peripheral_led",
 "gatt_handle_value": "6",
 "bundle": "extension",
 "app_rom_size": "376832",
 "app_rom_addr": "163840",
 "family": "ing918",
 "vcode": false,
 "role": "peripheral",
 "mesh": {
  "lowpower": true,
  "friend": true,
  "relay": true,
  "proxy": true
 },
 "keil": true,
 "cmsis": "",
 "gatt_handle_name": "HANDLE_RGB_LIGHTING_CONTROL",
 "app_ram_size": 34536,
 "app_ram_addr": 536901912,
 "uart_log": true,
 "ota_ver_patch": "0",
 "profile_data": "\/\/ Service Generic Access: 1800\r\n0x0A, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x28,\r\n0x00, 0x18, \r\n\/\/ Characteristic Device Name: 2A00\r\n0x0D, 0x00, 0x02, 0x00, 0x02, 0x00, 0x03, 0x28,\r\n0x02, 0x03, 0x00, 0x00, 0x2A, \r\n0x0F, 0x00, 0x02, 0x00, 0x03, 0x00, 0x00, 0x2A,\r\n0x49, 0x4E, 0x47, 0x20, 0x4C, 0x45, 0x44, \r\n\r\n\/\/ Service INGChips RGB Lighting Service: {6a33a526-e004-4793-a084-8a1dc49b84fd}\r\n0x18, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x28,\r\n0xFD, 0x84, 0x9B, 0xC4, 0x1D, 0x8A, 0x84, 0xA0, \r\n0x93, 0x47, 0x04, 0xE0, 0x26, 0xA5, 0x33, 0x6A, \r\n\/\/ Characteristic RGB Lighting Control: {1c190e92-37dd-4ac4-8154-0444c69274c2}\r\n0x1B, 0x00, 0x02, 0x00, 0x05, 0x00, 0x03, 0x28,\r\n0x06, 0x06, 0x00, 0xC2, 0x74, 0x92, 0xC6, 0x44, \r\n0x04, 0x54, 0x81, 0xC4, 0x4A, 0xDD, 0x37, 0x92, \r\n0x0E, 0x19, 0x1C, \r\n0x19, 0x00, 0x06, 0x02, 0x06, 0x00,\r\n0xC2, 0x74, 0x92, 0xC6, 0x44, 0x04, 0x54, 0x81, \r\n0xC4, 0x4A, 0xDD, 0x37, 0x92, 0x0E, 0x19, 0x1C, \r\n0x00, 0x00, 0x00, \r\n\r\n0x00,0x00\r\n\/\/ total size = 116\r\n\r\n\/\/ HANDLE_DEVICE_NAME=3\r\n\/\/ HANDLE_RGB_LIGHTING_CONTROL=6\r\n\r\n\/\/ HANDLE_DEVICE_NAME_OFFSET=31\r\n\/\/ HANDLE_RGB_LIGHTING_CONTROL_OFFSET=111\r\n",
 "coding_profile": false
}