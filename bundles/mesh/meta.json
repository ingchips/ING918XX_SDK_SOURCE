{
    "api": [
        "att_server_init", 
        "att_server_register_packet_handler", 
        "att_server_can_send_packet_now", 
        "att_server_request_can_send_now_event", 
        "att_server_notify", 
        "att_server_indicate", 
        "att_server_get_mtu", 
        "att_emit_general_event", 
        "att_set_db", 
        "att_set_read_callback", 
        "att_set_write_callback", 
        "att_dispatch_register_client", 
        "att_dispatch_register_server", 
        "att_dispatch_client_can_send_now", 
        "att_dispatch_server_can_send_now", 
        "att_dispatch_client_request_can_send_now_event", 
        "att_dispatch_server_request_can_send_now_event", 
        "gatt_client_discover_primary_services", 
        "gatt_client_discover_primary_services_by_uuid16", 
        "gatt_client_discover_primary_services_by_uuid128", 
        "gatt_client_discover_characteristics_for_service", 
        "gatt_client_find_included_services_for_service", 
        "gatt_client_discover_characteristics_for_handle_range_by_uuid16", 
        "gatt_client_discover_characteristics_for_handle_range_by_uuid128", 
        "gatt_client_discover_characteristics_for_service_by_uuid16", 
        "gatt_client_discover_characteristics_for_service_by_uuid128", 
        "gatt_client_discover_characteristic_descriptors", 
        "gatt_client_read_value_of_characteristic", 
        "gatt_client_read_value_of_characteristic_using_value_handle", 
        "gatt_client_read_value_of_characteristics_by_uuid16", 
        "gatt_client_read_value_of_characteristics_by_uuid128", 
        "gatt_client_read_long_value_of_characteristic", 
        "gatt_client_read_long_value_of_characteristic_using_value_handle", 
        "gatt_client_read_long_value_of_characteristic_using_value_handle_with_offset", 
        "gatt_client_read_multiple_characteristic_values", 
        "gatt_client_write_value_of_characteristic_without_response", 
        "gatt_client_signed_write_without_response", 
        "gatt_client_write_value_of_characteristic", 
        "gatt_client_write_long_value_of_characteristic", 
        "gatt_client_write_long_value_of_characteristic_with_offset", 
        "gatt_client_reliable_write_long_value_of_characteristic", 
        "gatt_client_read_characteristic_descriptor", 
        "gatt_client_read_characteristic_descriptor_using_descriptor_handle", 
        "gatt_client_read_long_characteristic_descriptor", 
        "gatt_client_read_long_characteristic_descriptor_using_descriptor_handle", 
        "gatt_client_read_long_characteristic_descriptor_using_descriptor_handle_with_offset", 
        "gatt_client_write_characteristic_descriptor", 
        "gatt_client_write_characteristic_descriptor_using_descriptor_handle", 
        "gatt_client_write_long_characteristic_descriptor", 
        "gatt_client_write_long_characteristic_descriptor_using_descriptor_handle", 
        "gatt_client_write_long_characteristic_descriptor_using_descriptor_handle_with_offset", 
        "gatt_client_write_client_characteristic_configuration", 
        "gatt_client_prepare_write", 
        "gatt_client_execute_write", 
        "gatt_client_cancel_write", 
        "gatt_client_deserialize_service", 
        "gatt_client_deserialize_characteristic", 
        "gatt_client_deserialize_characteristic_descriptor", 
        "ble_gatts_find_svc", 
        "ble_gatts_find_chr", 
        "gatt_client_get_mtu", 
        "gatt_client_is_ready", 
        "gatt_client_listen_for_characteristic_value_updates", 
        "gatt_client_register_handler", 
        "gatt_client_pts_suppress_mtu_exchange", 
        "gap_set_random_device_address", 
        "gap_disconnect", 
        "gap_add_whitelist", 
        "gap_remove_whitelist", 
        "gap_read_phy", 
        "gap_set_def_phy", 
        "gap_set_phy", 
        "gap_set_adv_set_random_addr", 
        "gap_set_ext_scan_para", 
        "gap_set_ext_scan_response_data", 
        "gap_set_ext_scan_enable", 
        "gap_set_ext_adv_enable", 
        "gap_set_ext_adv_para", 
        "gap_set_ext_adv_data", 
        "gap_set_periodic_adv_data", 
        "gap_set_periodic_adv_enable", 
        "gap_set_periodic_adv_para", 
        "gap_clr_adv_set", 
        "gap_rmv_adv_set", 
        "gap_periodic_adv_create_sync", 
        "gap_periodic_adv_create_sync_cancel", 
        "gap_periodic_adv_term_sync", 
        "gap_add_dev_to_periodic_list", 
        "gap_rmv_dev_from_periodic_list", 
        "gap_clr_periodic_adv_list", 
        "gap_read_periodic_adv_list_size", 
        "gap_ext_create_connection", 
        "gap_create_connection_cancel", 
        "gap_set_host_channel_classification", 
        "gap_update_connection_parameters", 
        "gap_get_connection_parameter_range", 
        "gap_set_connection_parameter_range", 
        "gap_aes_encrypt", 
        "gap_start_ccm", 
        "hci_add_event_handler", 
        "hci_register_acl_packet_handler", 
        "hci_power_control", 
        "platform_set_evt_callback", 
        "platform_set_irq_callback", 
        "platform_get_version", 
        "platform_raise_assertion", 
        "sysSetPublicDeviceAddr", 
        "platform_config", 
        "platform_shutdown", 
        "platform_printf", 
        "platform_set_rf_clk_source", 
        "platform_set_rf_init_data", 
        "platform_set_rf_power_mapping", 
        "big_endian_read_16", 
        "big_endian_read_32", 
        "big_endian_store_16", 
        "big_endian_store_32", 
        "reverse_bytes", 
        "reverse_24", 
        "reverse_48", 
        "reverse_56", 
        "reverse_64", 
        "reverse_128", 
        "reverse_bd_addr", 
        "char_for_nibble", 
        "nibble_for_char", 
        "bd_addr_cmp", 
        "bd_addr_copy", 
        "printf_hexdump", 
        "uuid128_to_str", 
        "bd_addr_to_str", 
        "sscanf_bd_addr", 
        "uuid_add_bluetooth_prefix", 
        "uuid_has_bluetooth_prefix", 
        "btstack_push_user_msg", 
        "l2cap_register_fixed_channel", 
        "l2cap_can_send_fixed_channel_packet_now", 
        "l2cap_request_can_send_fix_channel_now_event", 
        "l2cap_send_connectionless", 
        "l2cap_send_connectionless3", 
        "l2cap_init", 
        "l2cap_max_le_mtu", 
        "l2cap_send_signaling_le", 
        "sm_config", 
        "sm_add_event_handler", 
        "sm_private_random_address_generation_set_mode", 
        "sm_private_random_address_generation_get_mode", 
        "sm_private_random_address_generation_set_update_period", 
        "sm_private_random_address_generation_get", 
        "sm_register_oob_data_callback", 
        "sm_bonding_decline", 
        "sm_just_works_confirm", 
        "sm_passkey_input", 
        "sm_set_accepted_stk_generation_methods", 
        "sm_set_encryption_key_size_range", 
        "sm_set_authentication_requirements", 
        "sm_send_security_request", 
        "sm_encryption_key_size", 
        "sm_authenticated", 
        "sm_authorization_state", 
        "sm_request_pairing", 
        "sm_authorization_decline", 
        "sm_authorization_grant", 
        "sm_address_resolution_lookup", 
        "sm_le_device_key", 
        "kv_init", 
        "kv_remove_all", 
        "kv_remove", 
        "kv_put", 
        "kv_get", 
        "kv_value_modified", 
        "kv_commit", 
        "kv_visit", 
        "kv_value_append", 
        "kv_value_trunc", 
        "mesh_setup", 
        "mesh_set_dev_name", 
        "mesh_platform_config", 
        "_os_mbuf_leadingspace", 
        "_os_mbuf_trailingspace", 
        "os_mqueue_init", 
        "os_mqueue_get", 
        "os_mqueue_put", 
        "os_msys_register", 
        "os_msys_get", 
        "os_msys_reset", 
        "os_msys_get_pkthdr", 
        "os_msys_count", 
        "os_msys_num_free", 
        "os_mbuf_pool_init", 
        "os_mbuf_get", 
        "os_mbuf_get_pkthdr", 
        "os_mbuf_dup", 
        "os_mbuf_off", 
        "os_mbuf_copydata", 
        "os_mbuf_append", 
        "os_mbuf_appendfrom", 
        "os_mbuf_free", 
        "os_mbuf_free_chain", 
        "os_mbuf_adj", 
        "os_mbuf_cmpf", 
        "os_mbuf_cmpm", 
        "os_mbuf_prepend", 
        "os_mbuf_prepend_pullup", 
        "os_mbuf_copyinto", 
        "os_mbuf_concat", 
        "os_mbuf_extend", 
        "os_mbuf_pullup", 
        "os_mbuf_trim_front", 
        "NET_BUF_SIMPLE", 
        "net_buf_simple_init", 
        "net_buf_put", 
        "net_buf_ref", 
        "net_buf_unref", 
        "net_buf_simple_pull_le16", 
        "net_buf_simple_pull_be16", 
        "net_buf_simple_pull_be32", 
        "net_buf_simple_pull_le32", 
        "net_buf_simple_pull_u8", 
        "net_buf_simple_add_le16", 
        "net_buf_simple_add_be16", 
        "net_buf_simple_add_u8", 
        "net_buf_simple_add_be32", 
        "net_buf_simple_add_le32", 
        "net_buf_add_zeros", 
        "net_buf_simple_push_le16", 
        "net_buf_simple_push_be16", 
        "net_buf_simple_push_u8", 
        "net_buf_simple_pull", 
        "net_buf_simple_add", 
        "k_fifo_is_empty", 
        "net_buf_get", 
        "net_buf_simple_push", 
        "net_buf_reserve", 
        "bt_dh_key_gen", 
        "bt_pub_key_gen", 
        "bt_pub_key_get", 
        "bt_rand", 
        "bt_hex", 
        "bt_encrypt_be", 
        "bt_le_adv_start", 
        "bt_le_adv_stop", 
        "k_work_init", 
        "k_delayed_work_init", 
        "k_delayed_work_cancel", 
        "k_delayed_work_submit", 
        "k_uptime_get", 
        "k_uptime_get_32", 
        "k_sleep", 
        "k_work_submit", 
        "k_work_add_arg", 
        "k_delayed_work_add_arg", 
        "k_delayed_work_remaining_get", 
        "net_buf_simple_save", 
        "net_buf_simple_restore", 
        "sys_memcpy_swap", 
        "MYNEWT_VAL_BLE_MESH_GATT_PROXY", 
        "k_sem_take", 
        "net_buf_slist_init", 
        "net_buf_slist_is_empty", 
        "net_buf_slist_peek_head", 
        "net_buf_slist_peek_next", 
        "net_buf_slist_get", 
        "net_buf_slist_put", 
        "net_buf_slist_remove", 
        "net_buf_slist_merge_slist", 
        "settings_bytes_from_str", 
        "settings_str_from_bytes", 
        "PB_ADV_config", 
        "le_adv_status_reset", 
        "bt_mesh_model_msg_init", 
        "bt_mesh_model_send", 
        "bt_mesh_model_publish", 
        "bt_mesh_model_elem", 
        "bt_mesh_input_string", 
        "bt_mesh_input_number", 
        "bt_mesh_prov_enable", 
        "bt_mesh_prov_disable", 
        "bt_mesh_init", 
        "bt_mesh_reset", 
        "bt_mesh_provision", 
        "bt_mesh_is_provisioned", 
        "ble_npl_callout_init", 
        "npl_freertos_eventq_get", 
        "npl_freertos_eventq_put", 
        "npl_freertos_sem_init", 
        "npl_freertos_sem_pend", 
        "npl_freertos_sem_release", 
        "npl_freertos_callout_init", 
        "npl_freertos_callout_reset", 
        "npl_freertos_callout_remaining_ticks", 
        "npl_freertos_time_ms_to_ticks", 
        "xQueueGenericSend", 
        "xQueueReceive", 
        "xQueueGenericSendFromISR", 
        "xQueueGiveFromISR", 
        "xQueueReceiveFromISR", 
        "xQueueIsQueueEmptyFromISR", 
        "xQueueCreateCountingSemaphore", 
        "xQueueSemaphoreTake", 
        "xQueueGenericCreate", 
        "xQueueGenericCreateStatic", 
        "vQueueWaitForMessageRestricted", 
        "xQueueGenericReset", 
        "xTaskCreate", 
        "xTaskCreateStatic", 
        "vTaskDelay", 
        "vTaskStartScheduler", 
        "vTaskSuspendAll", 
        "xTaskResumeAll", 
        "xTaskGetTickCount", 
        "xTaskGetTickCountFromISR", 
        "xTaskIncrementTick", 
        "vTaskPlaceOnEventList", 
        "vTaskPlaceOnEventListRestricted", 
        "xTaskRemoveFromEventList", 
        "vTaskSwitchContext", 
        "xTaskCheckForTimeOut", 
        "vTaskMissedYield", 
        "xTaskGetSchedulerState", 
        "xTaskPriorityInherit", 
        "xTaskPriorityDisinherit", 
        "vTaskPriorityDisinheritAfterTimeout", 
        "vTaskStepTick", 
        "eTaskConfirmSleepModeStatus", 
        "pvTaskIncrementMutexHeldCount", 
        "vTaskInternalSetTimeOutState", 
        "xTimerCreate", 
        "pvTimerGetTimerID", 
        "xTimerGetExpiryTime", 
        "xTimerCreateTimerTask", 
        "xTimerGenericCommand", 
        "pxPortInitialiseStack", 
        "pvPortMalloc", 
        "vPortFree", 
        "xPortStartScheduler"
    ], 
    "app": {
        "base": 278528
    }, 
    "ram": {
        "base": 536880208, 
        "size": 54040
    }, 
    "rom": {
        "base": 16384, 
        "size": 258236
    }, 
    "version": [
        0, 
        14, 
        1
    ]
}